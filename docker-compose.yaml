version: '3.4'

services:

  admin:
    build:
      context: ./admin
      target: base
    command: npm run dev
    ports:
      - 3000:3000
    volumes:
      - ./admin:/app
    env_file:
      - ./admin/.env
    depends_on:
      rabbitmq:
        condition: service_healthy
    links: 
      - rabbitmq

  postgres:
    image: postgres
    # volumes:
      # - ./.docker/postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=admin
    ports:
      - 5432:5432

  main:
    build:
      context: ./main
      target: base
    command: npm run dev
    ports:
      - 3001:3001
    volumes:
      - ./main:/app
    env_file:
      - ./main/.env
    depends_on:
      rabbitmq:
        condition: service_healthy
    links: 
      - rabbitmq

  mongodb:
    image: mongo
    # volumes:
      # - ./.docker/mongo:/data/db
    ports:
      - 27017:27017

  rabbitmq:
    build: rabbitmq/.
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
    volumes:
      - ./rabbitmq/rabbitmq.config:/etc/rabbitmq/rabbitmq.config
      - ./rabbitmq/definitions.json:/etc/rabbitmq/definitions.json
      # - ./.docker/queue/data/:/var/lib/rabbitmq/
      # - ./.docker/queue/log/:/var/log/rabbitmq
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:15672"]
      interval: 5s
      timeout: 5s
      retries: 5
        
